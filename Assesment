/*Create table product*/

CREATE TABLE Product
(
    Prod_id int(100) PRIMARY KEY,
    Pro_name varchar(100),
    Pro_price int(100),
    Pro_code varchar(100)
);

INSERT into Product(Prod_id,Pro_name,Pro_price,Pro_code) VALUES('101','Mother Board','3200.00','15');
INSERT into Product(Prod_id,Pro_name,Pro_price,Pro_code) VALUES('102','Key Board','450.00','16');
INSERT into Product(Prod_id,Pro_name,Pro_price,Pro_code) VALUES('103','ZIP Drive','250.00','14');
INSERT into Product(Prod_id,Pro_name,Pro_price,Pro_code) VALUES('104','Speaker','550.00','16');
INSERT into Product(Prod_id,Pro_name,Pro_price,Pro_code) VALUES('105','Monitor','5000.00','11');
INSERT into Product(Prod_id,Pro_name,Pro_price,Pro_code) VALUES('106','DVD Drive','900.00','12');
INSERT into Product(Prod_id,Pro_name,Pro_price,Pro_code) VALUES('107','CD Drive','800.00','12');
INSERT into Product(Prod_id,Pro_name,Pro_price,Pro_code) VALUES('108','Printer','2600.00','13');
INSERT into Product(Prod_id,Pro_name,Pro_price,Pro_code) VALUES('109','Refill Cartridge','350.00','13');
INSERT into Product(Prod_id,Pro_name,Pro_price,Pro_code) VALUES('110','Mouse','250.00','12')

/* Write sql query to find the items whose prices are higher than or equal 250rs. 
Order the result by product price in descending, then product name in 
ascending. Return pro_name and pro_price */

SELECT Pro_name, Pro_price FROM product WHERE Pro_price>='250.00' ORDER BY Pro_price DESC, Pro_name ASC;

/* Write a sql query to find the cheapest item. Return pro_name and pro_price */

SELECT Pro_name, MIN(Pro_price) FROM product;

/* Write the sql query to calculate the average price of the items for each 
company. Return average price and company code. */

SELECT AVG(Pro_price), Pro_code FROM product GROUP BY Pro_code;

/* Write the sql query to find the average total for all the product mention in the 
table */

SELECT AVG(Pro_price) FROM product;
